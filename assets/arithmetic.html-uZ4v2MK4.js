import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as i,c as o,a as n,b as s,d as e,e as t}from"./app-FIjVznMJ.js";const c={},u=n("h1",{id:"hgameweek2arithmetic-2024",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hgameweek2arithmetic-2024","aria-hidden":"true"},"#"),s(" hgameWeek2Arithmetic（2024）")],-1),r=t(`<li><p>一打开很少的函数+反汇编后爆出红色 应该是加壳</p></li><li><p>使用Exeinfo Pe查看加壳方式</p><ul><li><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Tampared <span class="token function">file</span> <span class="token punctuation">]</span> x64 UPX v3.9 - <span class="token number">4.0</span> - <span class="token punctuation">[</span> <span class="token number">3.96</span> <span class="token punctuation">]</span> - exe signature - <span class="token number">2013</span>-2023 - http://upx.github.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>upx加壳 就用upx进行解</p><ul><li><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>upx <span class="token parameter variable">-d</span> filename
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>报错</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>upx: arithmetic.exe: CantUnpackException: <span class="token function">file</span> is possibly modified/hacked/protected<span class="token punctuation">;</span> take care<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,4),d=n("p",null,"网上查了一下 大概就是 upx的防脱",-1),k={href:"https://www.52pojie.cn/thread-326995-1-1.html",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),m={href:"https://blog.csdn.net/whatday/article/details/99709317",target:"_blank",rel:"noopener noreferrer"},b=n("ul",null,[n("li",null,"将几个特征值修改为upx即可")],-1),g=t(`<h2 id="阅读逻辑" tabindex="-1"><a class="header-anchor" href="#阅读逻辑" aria-hidden="true">#</a> 阅读逻辑</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code> <span class="token keyword">for</span> <span class="token punctuation">(</span> file <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">&quot;out&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">new_scanf</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&quot;%d&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> num <span class="token operator">=</span> v9 <span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    v8 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> num <span class="token operator">!=</span> num2 <span class="token punctuation">)</span>
      v8 <span class="token operator">=</span> num2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    v9 <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> num <span class="token operator">!=</span> num2 <span class="token punctuation">)</span>
      v9 <span class="token operator">=</span> num<span class="token punctuation">;</span>
    num2 <span class="token operator">=</span> v8<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>我们很明显发现这里的逻辑肯定是ida识别错误导致的 所以我们看汇编代码</p><blockquote><ul><li>RDI：第一个整数参数</li><li>RSI：第二个整数参数</li><li>RDX：第三个整数参数</li><li>RCX：第四个整数参数</li><li>R8：第五个整数参数</li><li>R9：第六个整数参数</li></ul><p>下面代码是sub_7FF7BD191080出现的两段代码 并且为了方便理解 我们查看out里面有666986个字节</p></blockquote><div class="language-assembly line-numbers-mode" data-ext="assembly"><pre class="language-assembly"><code>mov     edi, edx  ;v6
movsxd  rsi, eax
movsxd  rax, edx
lea     rdx, aD                         ; &quot;%d&quot;
imul    rcx, rsi, 1F4h
add     rcx, rax
lea     r8, [r8+rcx*4]
mov     rcx, rbp                        ; Stream
call    sub_7FF7BD191080

mov     rcx, rax                       
lea     r8, dword_7FF7BD195084
lea     rdx, aD                         
mov     rbp, rax
call    sub_7FF7BD191080
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>也就是sub_7FF7BD191080()</p></li><li><p>为了查看在调用call的时候1-6的寄存器值 我们使用idapython脚本</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> idc
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;rdi:&quot;</span><span class="token punctuation">,</span>idc<span class="token punctuation">.</span>get_reg_value<span class="token punctuation">(</span><span class="token string">&quot;rdi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;rsi:&quot;</span><span class="token punctuation">,</span>idc<span class="token punctuation">.</span>get_reg_value<span class="token punctuation">(</span><span class="token string">&quot;rsi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;rdx:&quot;</span><span class="token punctuation">,</span>idc<span class="token punctuation">.</span>get_reg_value<span class="token punctuation">(</span><span class="token string">&quot;rdx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;rcx:&quot;</span><span class="token punctuation">,</span>idc<span class="token punctuation">.</span>get_reg_value<span class="token punctuation">(</span><span class="token string">&quot;rcx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;r8:&quot;</span><span class="token punctuation">,</span>idc<span class="token punctuation">.</span>get_reg_value<span class="token punctuation">(</span><span class="token string">&quot;r8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;r9:&quot;</span><span class="token punctuation">,</span>idc<span class="token punctuation">.</span>get_reg_value<span class="token punctuation">(</span><span class="token string">&quot;r9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rdi: <span class="token number">1</span> rsi: <span class="token number">2</span> rdx: <span class="token number">140702006190712</span> rcx: <span class="token number">1370015100192</span> r8: <span class="token number">140702006204500</span> r9: <span class="token number">140702006202500</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>处理一下数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>rdi<span class="token operator">:</span><span class="token number">1</span>
rsi<span class="token operator">:</span><span class="token number">2</span>
rdx<span class="token operator">:</span><span class="token number">0x7ff7bd192278</span><span class="token punctuation">;</span> <span class="token comment">// %d</span>
rcx<span class="token operator">:</span><span class="token number">0x13efb436d20</span>
r8<span class="token operator">:</span>	<span class="token number">0x7ff7bd195854</span>
r9<span class="token operator">:</span> <span class="token number">0x7ff7bd195084</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>其实这里我还是没看出来怎么实现</p></li></ul>`,3);function h(x,_){const a=l("ExternalLinkIcon");return i(),o("div",null,[u,n("ul",null,[r,n("li",null,[d,n("blockquote",null,[n("p",null,[s("防脱文章:"),n("a",k,[s("UPX防脱壳机脱壳、去除特征码、添加花指令小探 - 『脱壳破解区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn"),e(a)]),v,n("a",m,[s("手动去upx特征_upx -d-CSDN博客"),e(a)]),s("这个是解决方案")])]),b])]),g])}const w=p(c,[["render",h],["__file","arithmetic.html.vue"]]);export{w as default};
