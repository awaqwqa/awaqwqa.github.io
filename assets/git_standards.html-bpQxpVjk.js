const t=JSON.parse('{"key":"v-56ea4ef9","path":"/posts/Development/git_standards.html","title":"git规范学习(浅学习)","lang":"en-US","frontmatter":{"tag":["development","git"],"description":"git规范学习(浅学习) 因为我使用git比较随性 所以在这里系统学习一下git的代码提交规范 参考文章:[Git代码提交规范-阿里云开发者社区 (aliyun.com)](https://developer.aliyun.com/article/1290068#:~:text=简介： 关于git的规范 良好的代码提交规范可以帮助团队成员更好地理解和维护代码库。 以下是一些常见的Git代码提交规范：,提交频率：尽量保持提交频率较小，每个提交应该只包含一个逻辑上的更改或修复。 提交信息格式：每个提交应该包含一个简明扼要的提交信息，格式为： [类型]%3A 描述。)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Development/git_standards.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"git规范学习(浅学习)"}],["meta",{"property":"og:description","content":"git规范学习(浅学习) 因为我使用git比较随性 所以在这里系统学习一下git的代码提交规范 参考文章:[Git代码提交规范-阿里云开发者社区 (aliyun.com)](https://developer.aliyun.com/article/1290068#:~:text=简介： 关于git的规范 良好的代码提交规范可以帮助团队成员更好地理解和维护代码库。 以下是一些常见的Git代码提交规范：,提交频率：尽量保持提交频率较小，每个提交应该只包含一个逻辑上的更改或修复。 提交信息格式：每个提交应该包含一个简明扼要的提交信息，格式为： [类型]%3A 描述。)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-03T07:30:16.000Z"}],["meta",{"property":"article:author","content":"Elegy"}],["meta",{"property":"article:tag","content":"development"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:modified_time","content":"2024-03-03T07:30:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git规范学习(浅学习)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T07:30:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Elegy\\"}]}"]]},"headers":[{"level":2,"title":"提交信息格式","slug":"提交信息格式","link":"#提交信息格式","children":[{"level":3,"title":"格式:","slug":"格式","link":"#格式","children":[]},{"level":3,"title":"commit的内容","slug":"commit的内容","link":"#commit的内容","children":[]}]},{"level":2,"title":"分支管理","slug":"分支管理","link":"#分支管理","children":[{"level":3,"title":"主分支:","slug":"主分支","link":"#主分支","children":[]}]},{"level":2,"title":"Code Review","slug":"code-review","link":"#code-review","children":[]}],"git":{"createdTime":1709451016000,"updatedTime":1709451016000,"contributors":[{"name":"awaqwqa","email":"88972629+awaqwqa@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.49,"words":447},"filePathRelative":"posts/Development/git_standards.md","localizedDate":"March 3, 2024","excerpt":"<h1> git规范学习(浅学习)</h1>\\n<blockquote>\\n<p>因为我使用git比较随性 所以在这里系统学习一下git的代码提交规范 <br>参考文章:[Git代码提交规范-阿里云开发者社区 (aliyun.com)](https://developer.aliyun.com/article/1290068#:~:text=简介： 关于git的规范 良好的代码提交规范可以帮助团队成员更好地理解和维护代码库。 以下是一些常见的Git代码提交规范：,提交频率：尽量保持提交频率较小，每个提交应该只包含一个逻辑上的更改或修复。 提交信息格式：每个提交应该包含一个简明扼要的提交信息，格式为： [类型]%3A 描述。)</p>\\n</blockquote>","autoDesc":true}');export{t as data};
