import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as n,e as a}from"./app-Ys6pRCJT.js";const c={},l=a('<h1 id="_2024四川省信息安全省赛snake复现" tabindex="-1"><a class="header-anchor" href="#_2024四川省信息安全省赛snake复现" aria-hidden="true">#</a> 2024四川省信息安全省赛snake复现</h1><h2 id="复习" tabindex="-1"><a class="header-anchor" href="#复习" aria-hidden="true">#</a> 复习</h2><p>由于这题是利用的构造一个fakechunk 来进行free所以我们需要好好搞清楚一下glibc2.39版本下free的检测差不多有哪些(这里针对大chunk)</p><h3 id="free" tabindex="-1"><a class="header-anchor" href="#free" aria-hidden="true">#</a> free</h3><ul><li><p>首先会检查size是否正常</p><ul><li>是否对齐</li><li>是否大于最小值</li></ul></li><li><p>利用check_inuse_chunk查看这个chunk是否是double free</p></li><li><p>获取物理意义上下一个chunk</p></li><li><p>chunk不能是topchunk</p></li><li><p>下一个chunk的p位必须为1</p></li><li><p>检查下一个chunk的size是否正常</p></li><li><p>要是当前chunk的prev_inuse位为0则执行合并机制</p></li><li><p><strong>当下一个chunk不是头chunk 则获取下下个chunk 当nextinuse位为0的话就触发unlink</strong></p></li></ul>',5),r=[l];function h(s,t){return i(),n("div",null,r)}const o=e(c,[["render",h],["__file","snake.html.vue"]]);export{o as default};
