const e=JSON.parse('{"key":"v-4b77e47b","path":"/posts/c2018-HitCon-gundam(tcahe%E6%9C%BA%E5%88%B6_%E6%B3%84%E9%9C%B2libc%E5%9C%B0%E5%9D%80).html","title":"c2018-HitCon-gundam(tcahe机制+泄露libc地址)","lang":"en-US","frontmatter":{"description":"c2018-HitCon-gundam(tcahe机制+泄露libc地址) 重要知识点 由于linux中使用free()进行内存释放时，不大于 max_fast （默认值为 64B）的 chunk 被释放后，首先会被放到 fast bins中，大于max_fast的chunk或者fast bins 中的空闲 chunk 合并后会被放入unsorted bin中。而在fastbin为空时，unsortbin的fd和bk指向自身main_arena中，该地址的相对偏移值存放在libc.so中，可以通过use after free后打印出main_arena的实际地址，结合偏移值从而得到libc的加载地址。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/c2018-HitCon-gundam(tcahe%E6%9C%BA%E5%88%B6_%E6%B3%84%E9%9C%B2libc%E5%9C%B0%E5%9D%80).html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"c2018-HitCon-gundam(tcahe机制+泄露libc地址)"}],["meta",{"property":"og:description","content":"c2018-HitCon-gundam(tcahe机制+泄露libc地址) 重要知识点 由于linux中使用free()进行内存释放时，不大于 max_fast （默认值为 64B）的 chunk 被释放后，首先会被放到 fast bins中，大于max_fast的chunk或者fast bins 中的空闲 chunk 合并后会被放入unsorted bin中。而在fastbin为空时，unsortbin的fd和bk指向自身main_arena中，该地址的相对偏移值存放在libc.so中，可以通过use after free后打印出main_arena的实际地址，结合偏移值从而得到libc的加载地址。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-10T08:27:11.000Z"}],["meta",{"property":"article:author","content":"Elegy"}],["meta",{"property":"article:modified_time","content":"2024-01-10T08:27:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c2018-HitCon-gundam(tcahe机制+泄露libc地址)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-10T08:27:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Elegy\\"}]}"]]},"headers":[{"level":2,"title":"重要知识点","slug":"重要知识点","link":"#重要知识点","children":[{"level":3,"title":"tcahe机制","slug":"tcahe机制","link":"#tcahe机制","children":[]}]}],"git":{"createdTime":1704698425000,"updatedTime":1704875231000,"contributors":[{"name":"awaqwqa","email":"614286773@qq.com","commits":3}]},"readingTime":{"minutes":2.1,"words":631},"filePathRelative":"posts/c2018-HitCon-gundam(tcahe机制+泄露libc地址).md","localizedDate":"January 8, 2024","excerpt":"<h1> c2018-HitCon-gundam(tcahe机制+泄露libc地址)</h1>\\n<h2> 重要知识点</h2>\\n<blockquote>\\n<p>由于linux中使用<code>free()</code>进行内存释放时，不大于 <code>max_fast</code> （默认值为 64B）的 chunk 被释放后，首先会被放到 <code>fast bins</code>中，大于<code>max_fast</code>的chunk或者<code>fast bins</code> 中的空闲 chunk 合并后会被放入<code>unsorted bin</code>中。而在fastbin为空时，<code>unsortbin</code>的fd和bk指向自身<code>main_arena</code>中，该地址的相对偏移值存放在libc.so中，可以通过use after free后打印出<code>main_arena</code>的实际地址，结合偏移值从而得到libc的加载地址。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
